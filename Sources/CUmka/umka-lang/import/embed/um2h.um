import "std.um"

fn main() {
	if std.argc() < 2 {
		error("No input file")
	}

	fin := std.fopen(std.argv(1), "rb")
	if fin == null {
		error("Cannot open input file")
	}

	fout := std.fopen("umka_runtime_src.h", "w")
	if fout == null {
		error("Cannot open output file")
	}	

	fprintf(fout, "#ifndef UMKA_RUNTIME_SRC_H_INCLUDED\n")
	fprintf(fout, "#define UMKA_RUNTIME_SRC_H_INCLUDED\n\n")

	fprintf(fout, "static const char *rtlSrc = \n\n\"")

	for !std.feof(fin) {
		c := ' '
		fscanf(fin, "%c", &c)

		switch c {
			case '\\': fprintf(fout, "\\\\")
			case '\'': fprintf(fout, "\\\'")
			case '\"': fprintf(fout, "\\\"")
			case '\n': fprintf(fout, "\\n\"\n\"")
			case '\r': 
			default:   fprintf(fout, "%c", c)
		}
	}

	fprintf(fout, "\";\n\n#endif // UMKA_RUNTIME_SRC_H_INCLUDED\n")

	std.fclose(fin)
	std.fclose(fout)
}